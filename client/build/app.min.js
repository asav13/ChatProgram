var myApp=angular.module("chatApp",["ngRoute","ui.bootstrap"]);myApp.controller("LayoutController",["$scope","$location","$rootScope","ChatResource","UserService",function(o,t,r,e,l){o.navbarCollapsed=!0,r.go=function(o){t.path(o)}}]),myApp.config(["$routeProvider",function(o){o.when("/",{templateUrl:"src/home/home.html",controller:"HomeController"}).when("/login",{templateUrl:"src/login/login.html",controller:"LoginController"}).when("/chatrooms",{templateUrl:"src/chat/chatstartup.html",controller:"ChatController"}).when("/chatrooms/:name",{templateUrl:"src/chat/chatrooms.html",controller:"ChatRoomController"}).otherwise({templateUrl:"src/home/home.html"})}]);
"use strict";angular.module("chatApp").controller("ChatController",["$scope","$rootScope","$routeParams","$location","ChatResource","UserService",function(o,e,r,n,s,t){o.online=t.getOnlineStatus(),o.joinError=!1,o.isCollapsed=!0,s.getRoomList(),s.on("roomlist",function(e){if(e){var r=[];for(var n in e){var s={name:n,room:n,topic:e[n].topic,users:e[n].users,ops:e[n].ops};r.push(s)}o.rooms=r,o.selectedRoom=o.rooms[0]}else console.log("ERROR: Error fetching rooms")}),s.on("updatechat",function(o,e){s.getRoomList()}),s.on("updateusers",function(o,r){if(t.getOnlineStatus()){var n=t.getUserRoom();null!==n&&n.name===o&&(s.getRoomUsers(o.toString()),s.on("roomUserlist",function(o,r){o?e.joinedRoom.users=o:console.log("ERROR: "+r)}))}}),o.createRoom=function(){var r=t.getUsername(),i={userName:r};if(void 0!==o.newRoomName){var m={room:o.newRoomName,name:o.newRoomName,topic:"No topic has been set for room..",ops:i};s.createRoom(m).then(function(r,i){r?(o.joinError=!1,e.joinedRoom=m,n.path("/chatrooms/"+m.name),s.getMessages(m.name),t.addRoom(m),t.addOpRoom(m)):console.log("ERROR: "+i)})}},o.join=function(r){o.selectedRoom=r;var i=o.selectedRoom;({room:o.selectedRoom});s.joinRoom(i).then(function(r){r?(s.getRoomList(),o.joinError=!1,e.joinedRoom=i,n.path("/chatrooms/"+i.room),t.addRoom(i),s.getRoomUsers(i.room),s.getMessages(i.room)):(o.joinError=!0,console.log("ERROR: Error while trying to join room."))})},s.on("roomUserlist",function(o){void 0===e.joinedRoom.users&&(e.joinedRoom.users={});for(var r in o)e.joinedRoom.users[r]=r}),s.on("roomoplist",function(o){void 0===e.joinedRoom.users&&(e.joinedRoom.users={}),void 0===e.joinedRoom.ops&&(e.joinedRoom.ops={}),e.joinedRoom.ops=o;for(var r in o)e.joinedRoom.users[r]=r})}]);
"use strict";angular.module("chatApp").controller("ChatRoomController",["$scope","$rootScope","$routeParams","$location","ChatResource","UserService",function(e,o,n,s,r,t){e.online=t.getOnlineStatus(),e.selectedUser="",e.someOneSelected=!1,e.isOp=!1,e.roomMessages={},e.usersUserIsChattingTo=[],e.tabs=[],e.privateMessages=[];var a=t.getUserRoom();e.unbanning=!1,e.leaveRoom=function(){var e=n.name;r.leaveRoom(e),s.path("/chatrooms"),t.leaveRoom(),a=null},null!==a&&o.$on("$routeChangeSuccess",function(e,o,n){if("/chatrooms"!==s.hash&&null!==a){var i=a.name;r.leaveRoom(i),s.path("/chatrooms"),t.leaveRoom(),a=null}}),e.sendMessage=function(){var o=e.chatInput;if(o.length>0){var s=n.name,t=(new Date,{roomName:s,msg:o});e.chatInput="",r.sendMsg(t)}},e.sendPrivateMessage=function(){var o=e.selectedUser,n=prompt("Type a private message to "+o,"");if(null!==n){var s={nick:o,message:n},a={nick:t.getUsername(),message:n},i={from:t.getUsername(),to:o,message:n};if(e.privateMessages.push(i),e.usersUserIsChattingTo.indexOf(s.nick)<0){e.usersUserIsChattingTo.push(s.nick),console.log(t.getUsername()),console.log(s.nick);var m={title:o,content:""};e.tabs.push(m)}r.sendPrivateMsg(s,function(e){}),r.sendPrivateMsg(a,function(e){})}},r.on("updatechat",function(e,o){r.getMessages(e),r.getRoomUsers(e)}),r.on("recv_privatemsg",function(o,n){if(o[1]){r.getPrivateMessages(o);var s=new Date;s=s.toString(),s=s.substring(16,24);var a={from:o[0],msg:o[1],time:s};if(e.usersUserIsChattingTo.indexOf(a.from)<0&&a.from!==t.getUsername()){e.usersUserIsChattingTo.push(a.from);var i=[],a={from:"Babe",time:new Date,message:"YOLO"};i.push(a);var m={from:"Babe",time:new Date,message:"SWAG"};i.push(m);var c={title:a.from,content:i};e.tabs.push(c),console.log(i),console.log(e.tabs)}else{for(var i=[],l=0;l<e.privateMessages.length;l++)e.privateMessages[l].from===a.from&&e.privateMessages[l].to===t.getUsername()&&(i.push(e.privateMessages[l]),console.log(e.privateMessages[l]));for(var l=0;l<e.tabs.length;l++)if(e.tabs[l].title===a.from)for(var u=0;u<i.length;u++)e.tabs[l].content.indexOf(i[u])<0&&(e.tabs[l].content.push(i[u]),console.log(i[l]));console.log(i),console.log(e.tabs)}}}),r.on("roommessageslist",function(n){if(n&&null!==t.getUserRoom){var s=n[1];if(n[0]===t.getUserRoom().room)if(s){for(var r=0;r<s.length;r++)s[r].time=s[r].timestamp.substring(11,19);var a=t.getUserRoom();o.joinedRoom=a,e.roomMessages[a]=s}else console.log("ERROR: Error while loading messages.")}}),r.on("kicked",function(e,o){e[1]===t.getUsername()&&(alert("You've been kicked out of the room by "+e[2]+". Behave!"),s.path("/chatrooms"))}),r.on("banned",function(e){e[1]===t.getUsername()&&(alert("You've been banned from the room by "+e[2]+". Behave!"),s.path("/chatrooms"))}),r.on("opped",function(n){if(n[1]===t.getUsername()){alert("You've been opped by "+n[2]+"!"),e.isOp=!0;var s=o.joinedRoom;t.addOpRoom(s)}}),r.on("deopped",function(n){if(n[1]===t.getUsername()){alert("You've been deopped by "+n[2]+". Sorry!"),e.isOp=!1;var s=o.joinedRoom;t.addOpRoom(s)}}),r.on("roomUserlist",function(e){void 0===o.joinedRoom.users&&(o.joinedRoom.users={});for(var n in e)o.joinedRoom.users[n]=n}),r.on("roomoplist",function(e){void 0===o.joinedRoom.users&&(o.joinedRoom.users={}),void 0===o.joinedRoom.ops&&(o.joinedRoom.ops={}),o.joinedRoom.ops=e;for(var n in e)o.joinedRoom.users[n]=n}),e.changeTopic=function(){var n={room:a.name,topic:e.changedTopic};r.setTopic(n).then(function(s,r){s?(o.joinedRoom.topic=n.topic,e.changedTopic=""):console.log("ERROR: Error while changing topic "+r)})},e.$watch("selectedUser",function(){var o=t.getUsername();e.someOneSelected=!0,null!==t.getOpRoom()&&(e.isOp=!0),e.selectedUser===o&&(e.someOneSelected=!1,e.isOp=!1,e.selectedUser="")}),e.kick=function(){var o={user:e.selectedUser,room:n.name};r.kick(o,function(e){e||console.log("ERROR: Error while kicking user")})},e.ban=function(){var o={user:e.selectedUser,room:n.name};r.ban(o,function(e){e||console.log("ERROR: Error while banning user")})},e.makeOp=function(){var o={user:e.selectedUser,room:n.name};r.makeOp(o,function(e){r.getRoomUsers(o.room),e||console.log("ERROR: Error while opping user")})},e.deOp=function(){var o={user:e.selectedUser,room:n.name};r.deOp(o,function(e){r.getRoomUsers(o.room),e||console.log("ERROR: Error while deopping user")})},e.unban=function(){e.unbanning=!0,e.confirmUnban=function(){var o=e.unbanusername,s={user:o,room:n.name};r.unban(s,function(e){e||console.log("ERROR: Error while unbanning user")}),e.unbanning=!1}}}]);
"use strict";angular.module("chatApp").controller("HomeController",["$scope","$location","ChatResource","UserService","$rootScope",function(o,s,r,e,n){o.online=e.getOnlineStatus(),o.rooms=[],o.users=[],o.showDiv=!1,r.getRoomList(),r.on("roomlist",function(s){if(s){var r=[],e=0;for(var n in s){e++;var t=[],u={name:n,users:""};for(var i in s[n].users)t.push(" "+s[n].users[i]);angular.equals({},s[n].users)?u.users="Nobody here...":u.users=t.toString(),r.push(u)}e>=6&&(o.showDiv=!0),o.rooms=r}else console.log("ERROR: Error fetching rooms.")}),r.getUsers(),r.on("userlist",function(s){s?o.users=s:console.log("ERROR: Error fetching users.")})}]);
"use strict";angular.module("chatApp").controller("LoginController",["$scope","$location","ChatResource","UserService",function(o,n,e,l){o.logininfo="",o.online=l.getOnlineStatus(),console.log("DEB: scope online in login controller is "+o.online),o.rooms=[],o.login=function(){l.login(o.username),e.login(o.username).then(function(e){e?(o.logininfo="Welcome "+o.username+"!",o.online=!0,n.path("/chatrooms")):o.logininfo="Username '"+o.username+"' not available."})},o.logout=function(){l.logout(),o.online=!1,n.path("/"),e.logout()}}]);
"use strict";angular.module("chatApp").factory("ChatResource",["$rootScope","$q",function(n,o){var t=io.connect("http://localhost:8080");return{login:function(e,i){var u=o.defer();return n.username=e,n.login=!0,t.emit("adduser",e,function(n){u.resolve(n)}),u.promise},logout:function(){t.emit("logout")},getRoomList:function(n){t.emit("rooms",function(n){})},getRoomUsers:function(n,o){t.emit("roomUsers",n,function(n,o){})},getMessages:function(n,o){t.emit("roomMessages",n,function(n,o){})},getPrivateMessages:function(n,o){t.emit("roomPrivateMessages",n,function(n,o){})},getUsers:function(n){t.emit("users",function(n){})},createRoom:function(n){var e=o.defer();return t.emit("joinroom",n,function(n,o){e.resolve(n)}),e.promise},joinRoom:function(n){var e={room:n.name},i=o.defer();return t.emit("joinroom",e,function(n,o){i.resolve(n)}),i.promise},leaveRoom:function(n){t.emit("partroom",n)},setTopic:function(n,e){var i=o.defer();return t.emit("settopic",n,function(n,o){i.resolve(n)}),i.promise},sendMsg:function(n){t.emit("sendmsg",n)},sendPrivateMsg:function(o,e){t.emit("privatemsg",o,function(o){n.$apply(function(){e.apply(t,[o])})})},kick:function(o,e){t.emit("kick",o,function(o){n.$apply(function(){e.apply(t,[o])})})},ban:function(o,e){t.emit("ban",o,function(o){n.$apply(function(){e.apply(t,[o])})})},unban:function(o,e){t.emit("unban",o,function(o){n.$apply(function(){e.apply(t,[o])})})},makeOp:function(o,e){t.emit("op",o,function(o){n.$apply(function(){e.apply(t,[o])})})},deOp:function(o,e){t.emit("deop",o,function(o){n.$apply(function(){e.apply(t,[o])})})},on:function(e,i){console.log("Event received:"+e);o.defer();t.on(e,function(o,e,u){n.$apply(function(){i.apply(t,[o])})})}}}]);
angular.module("chatApp").factory("UserService",function(){var o={name:null,room:null,opRoom:null},n=!1;return{login:function(e){void 0===e?console.log("ERROR: no username"):n?console.log("ERROR: A user is logging in when some1 is already online..."):(o.name=e,o.rooms=[],n=!0)},getUsername:function(){return o.name},getUserRoom:function(){return o.room},getOnlineStatus:function(){return n},logout:function(){n?(n=!1,o.name=null,o.room=null,o.opRoom=null):console.log("ERROR: A user is logging off when no1 is logged in...")},addRoom:function(e){n?o.room=e:console.log("ERROR: No user logged in but trying to join room")},leaveRoom:function(e){n?(o.room=null,o.opRoom=null):console.log("ERROR: No user logged in but trying to join room")},addOpRoom:function(n){o.opRoom=n},getOpRoom:function(n){return o.opRoom},removeOpRoom:function(){o.opRoom=null}}});